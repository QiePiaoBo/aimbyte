<?xml version="1.0"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!--日志文件的保存路径,首先查找系统属性-Dlog.dir,如果存在就使用其；否则，在当前目录下创建名为logs目录做日志存放的目录 -->
    <property name="LOG_HOME" value="${log.dir:-logs}"/>
    <property name="APP_NAME" value="${spring.application.name:default-app}"/>

    <contextName>${APP_NAME}</contextName>
    <!-- 日志输出格式 -->
    <property name="SIMPLE_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{80} - %msg%n"/>
    <property name="DETAIL_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] [%X{X-B3-TraceId:-}:%X{X-B3-SpanId:-}] %-5level [%logger.%M:%L] - %msg%n"/>

    <!-- properties配置参数 -->
    <springProperty scope="context" name="IN_CA_DATA_STATUS" source="logback.async.callerdata.status" defaultValue="true"/>
    <springProperty scope="context" name="LOG_MAIN_LEVEL" source="logback.main.level" defaultValue="INFO"/>

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${DETAIL_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <!-- 异步日志入队流程： -->
    <!-- 1、队列剩余容量小于discardingThreshold且级别<=INFO则日志直接被丢弃 -->
    <!-- 2、neverBlock为true直接入队，此时如果队列没有空间则入队失败，否则阻塞直至成功入队-->
    <appender name="console-ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="console"/>
        <includeCallerData>${IN_CA_DATA_STATUS}</includeCallerData>
        <queueSize>4096</queueSize>
        <neverBlock>true</neverBlock>
        <discardingThreshold>0</discardingThreshold>
    </appender>
    <logger name="mybatis.sql.com.jiehun" level="DEBUG"/>
    <logger name="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" level="ERROR"/>
    <logger name="org.apache.dubbo" level="ERROR"/>
    <!-- 日志级别 -->
    <root level="${LOG_MAIN_LEVEL}">
        <appender-ref ref="console-ASYNC"/>
    </root>
</configuration>
